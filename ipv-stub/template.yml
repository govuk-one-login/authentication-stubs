AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: IPV stub

#      Tags:
#        Service: IPV stubs
#        Source: govuk-one-login/authentication-stubs

Parameters:
  Environment:
    Type: String
    Description: The name of the environment to deploy to
    Default: none
  CodeSigningConfigArn:
    Type: String
    Description: The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Default: none
  PermissionsBoundary:
    Type: String
    Description: The ARN of the permissions boundary to apply when creating IAM roles
    Default: none

Mappings:
  EnvironmentConfiguration:
    dev:
      ipvStubDomainName: ipvstub.signin.dev.account.gov.uk
      hostedZoneId: "Z10132222WVQ7U47816SI"


Conditions:
  UseCodeSigning: !Not [!Equals [none, !Ref CodeSigningConfigArn]]
  UsePermissionsBoundary: !Not [!Equals [none, !Ref PermissionsBoundary]]
  IsNotProduction: !Not [!Equals [!Ref Environment, production]]

Globals:
  Function:
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue

Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ${AWS::StackName}-ApiGateway
      StageName: Live
      AlwaysDeploy: true
      EndpointConfiguration:
        Type: REGIONAL

  IPVAuthorizeLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/ipv-authorize.handler
      LoggingConfig:
        LogGroup: !Ref IPVAuthorizeLambdaLogGroup
      Runtime: nodejs20.x
      Architectures:
        - arm64
      Environment:
        Variables:
          ENVIRONMENT: !Sub ${Environment}
          IPV_AUTHORIZE_PRIVATE_ENCRYPTION_KEY: "{{resolve:secretsmanager:/dev/stubs/ipv-stub-private-key:SecretString}}"
          IPV_AUTHORIZE_PUBLIC_SIGNING_KEY: ""
      Policies:
        - Statement:
            - Effect: Allow
              Action: secretsmanager:GetSecretValue
              Resource: arn:aws:secretsmanager:eu-west-2:975050272416:secret:/dev/stubs/ipv-stub-private-key-KQsLL3
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /authorize
            Method: get
        Post:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /authorize
            Method: post
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/endpoints/ipv-authorize.ts
        Minify: true
        Sourcemap: true
        Target: node20

  IPVAuthorizeLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${Environment}-${AWS::StackName}-ipv-authorize"
      RetentionInDays: 30

  GatewayDomain:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: !FindInMap [ EnvironmentConfiguration, !Ref Environment, ipvStubDomainName ]
      SecurityPolicy: TLS_1_2
      RegionalCertificateArn: !Ref Certificate
      EndpointConfiguration:
        Types:
          - REGIONAL

  Certificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !FindInMap [ EnvironmentConfiguration, !Ref Environment, ipvStubDomainName ]
      ValidationMethod: DNS

# todo ,
# currently records set and ACM vadiladation is done Manaully in old dev account 
# Once the signin.dev.account.gov.uk zone is migrated to new dev account we need to bring this is Code 
  
  #Domain:
    #Type: AWS::Route53::RecordSet
    #Properties:
      #HostedZoneId: !FindInMap [ EnvironmentConfiguration, !Ref Environment, hostedZoneId ]
      #Type: A
      #Name: !FindInMap [ EnvironmentConfiguration, !Ref Environment, ipvStubDomainName ]
      #AliasTarget:
        #DNSName: !GetAtt GatewayDomain.RegionalDomainName
        #HostedZoneId: !GetAtt GatewayDomain.RegionalHostedZoneId

  BasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !FindInMap [ EnvironmentConfiguration, !Ref Environment, ipvStubDomainName ]
      RestApiId: !Ref ApiGateway
      Stage: !Ref ApiGateway.Stage
    DependsOn: GatewayDomain