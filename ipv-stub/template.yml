AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: IPV stub

#      Tags:
#        Service: IPV stubs
#        Source: govuk-one-login/authentication-stubs

Parameters:
  Environment:
    Type: String
    Description: The name of the environment to deploy to
    Default: none
  CodeSigningConfigArn:
    Type: String
    Description: The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Default: none
  PermissionsBoundary:
    Type: String
    Description: The ARN of the permissions boundary to apply when creating IAM roles
    Default: none

Mappings:
  EnvironmentConfiguration:
    dev:
      #TODO
      ipvStubDomainName:


Conditions:
  UseCodeSigning: !Not [!Equals [none, !Ref CodeSigningConfigArn]]
  UsePermissionsBoundary: !Not [!Equals [none, !Ref PermissionsBoundary]]
  IsNotProduction: !Not [!Equals [!Ref Environment, production]]

Globals:
  Function:
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue

Resources:
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub ${AWS::StackName}-ApiGateway
      StageName: Live
      AlwaysDeploy: true

  IPVAuthorizeLambda:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: src/ipv-authorize.handler
      LoggingConfig:
        LogGroup: !Ref IPVAuthorizeLambdaLogGroup
      Runtime: nodejs20.x
      Architectures:
        - arm64
      Environment:
        Variables:
          ENVIRONMENT: !Sub ${Environment}
          IPV_AUTHORIZE_PUBLIC_SIGNING_KEY: ""
      Events:
        Get:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /authorize
            Method: get
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - src/endpoints/ipv-authorize.ts
        Minify: true
        Sourcemap: true
        Target: node20

  IPVAuthorizeLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      # TODO
      LogGroupName:
      RetentionInDays: 30

  PublicHostedZone:
    Type: AWS::Route53::HostedZone
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Name: !FindInMap [ EnvironmentConfiguration, !Ref Environment, ipvStubDomainName ]
